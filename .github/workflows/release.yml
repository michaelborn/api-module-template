name: FinnHub CI

on:
  push:
    branches:
      - development
      - master
      - main

jobs:
  #############################################
  # Tests First baby! We fail, no build :(
  #############################################
  tests:
    name: Tests
    if: "!contains(github.event.head_commit.message, '__SEMANTIC RELEASE VERSION UPDATE__')"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        cfengine: [ "lucee@5", "adobe@2018", "adobe@2021" ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Setup Environment For Testing Process
        run: |
          # Setup .env
          touch .env
          # ENV
          printf "@MODULE_NAME@_API_KEY=${{ secrets.@MODULE_NAME@_API_KEY }}\n" >> .env
          printf "@MODULE_NAME@_API_URL=${{ secrets.@MODULE_NAME@_API_URL }}\n" >> .env

      - name: Cache CommandBox Dependencies
        uses: actions/cache@v1
        if: ${{ true }}
        with:
          path: ~/.CommandBox/artifacts
          key: ${{ runner.OS }}-commandbox-cache-${{ hashFiles( 'box.json' ) }}-${{ hashFiles( 'tests/box.json' ) }}
          restore-keys: |
            ${{ runner.OS }}-commandbox-cache-${{ hashFiles( 'box.json' ) }}-${{ hashFiles( 'tests/box.json' ) }}
      - name: Setup CommandBox
        uses: elpete/setup-commandbox@v1.0.0

      - name: Install Test Harness Dependencies
        run: |
          box install

      - name: Start ${{ matrix.cfengine }} Server
        run: |
          box server start cfengine=${{ matrix.cfengine }} port=60299 --noSaveSettings --debug
          curl http://127.0.0.1:60299

      - name: Run Tests
        run: |
          mkdir tests/results
          box package set testbox.runner="http://localhost:60299/tests/runner.cfm"
          box testbox run --verbose outputFile=tests/results/result outputFormats=json,antjunit

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: tests/results/*.xml
          check_name: "${{ matrix.cfengine }} Test Results"

      - name: Upload Test Results Artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results-${{ matrix.cfengine }}
          path: |
            tests/results/*

      - name: Failure Debugging Info
        if: ${{ failure() }}
        working-directory: ./tests
        run: |
          box server log serverConfigFile="server-${{ matrix.cfengine }}.json"
      - name: Upload Debugging Info To Artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: Failure Debugging Info - ${{ matrix.cfengine }}
          path: |
            tests/.engine/**/logs/*
            tests/.engine/**/WEB-INF/cfusion/logs/*
  release:
    name: Semantic Release
    if: "!contains(github.event.head_commit.message, '__SEMANTIC RELEASE VERSION UPDATE__')"
    # needs: tests
    runs-on: ubuntu-latest
    env:
      GA_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11 

      - name: Set Up CommandBox
        uses: elpete/setup-commandbox@v1.0.0
      
      - name: Install and Configure Semantic Release
        run: |
          box install commandbox-semantic-release
          box config set endpoints.forgebox.APIToken=${{ secrets.FORGEBOX_TOKEN }}
          box config set modules.commandbox-semantic-release.targetBranch=main
          box config set modules.commandbox-semantic-release.plugins='{ "VerifyConditions": "GitHubActionsConditionsVerifier@commandbox-semantic-release", "FetchLastRelease": "ForgeBoxReleaseFetcher@commandbox-semantic-release", "RetrieveCommits": "JGitCommitsRetriever@commandbox-semantic-release", "ParseCommit": "ConventionalChangelogParser@commandbox-semantic-release", "FilterCommits": "DefaultCommitFilterer@commandbox-semantic-release", "AnalyzeCommits": "DefaultCommitAnalyzer@commandbox-semantic-release", "VerifyRelease": "NullReleaseVerifier@commandbox-semantic-release", "GenerateNotes": "GitHubMarkdownNotesGenerator@commandbox-semantic-release", "UpdateChangelog": "FileAppendChangelogUpdater@commandbox-semantic-release", "CommitArtifacts": "NullArtifactsCommitter@commandbox-semantic-release", "PublishRelease": "ForgeBoxReleasePublisher@commandbox-semantic-release", "PublicizeRelease": "GitHubReleasePublicizer@commandbox-semantic-release" }'
      
      - name: Debug Semantic Release
        run: box config set verboseErrors=true
      - name: Run Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: box semantic-release